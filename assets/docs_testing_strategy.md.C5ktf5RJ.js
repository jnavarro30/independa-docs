import{_ as a,c as t,o as i,ae as r}from"./chunks/framework.Byi7L62k.js";const h=JSON.parse('{"title":"Organization","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/testing/strategy.md","filePath":"docs/testing/strategy.md"}'),s={name:"docs/testing/strategy.md"};function o(l,e,n,p,c,d){return i(),t("div",null,e[0]||(e[0]=[r('<h1 id="organization" tabindex="-1">Organization <a class="header-anchor" href="#organization" aria-label="Permalink to &quot;Organization&quot;">​</a></h1><h3 id="project-name-all-projects" tabindex="-1">Project Name: All Projects <a class="header-anchor" href="#project-name-all-projects" aria-label="Permalink to &quot;Project Name: All Projects&quot;">​</a></h3><h3 id="version-1-0" tabindex="-1">Version: 1.0 <a class="header-anchor" href="#version-1-0" aria-label="Permalink to &quot;Version: 1.0&quot;">​</a></h3><h3 id="prepared-by-everthrive-team" tabindex="-1">Prepared By: EverThrive Team <a class="header-anchor" href="#prepared-by-everthrive-team" aria-label="Permalink to &quot;Prepared By: EverThrive Team&quot;">​</a></h3><h3 id="date-august-27-2025" tabindex="-1">Date: August 27, 2025 <a class="header-anchor" href="#date-august-27-2025" aria-label="Permalink to &quot;Date: August 27, 2025&quot;">​</a></h3><br><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ol><li><a href="#introduction">Introduction</a></li><li><a href="#objectives">Objectives</a></li><li><a href="#scope">Scope</a></li><li><a href="#test-approach">Test Approach</a></li><li><a href="#test-coverage">Test Coverage</a></li><li><a href="#test-execution-strategy">Test Execution Strategy</a></li><li><a href="#test-environments">Test Environments</a></li><li><a href="#exit-criteria">Exit Criteria</a></li><li><a href="#deliverables">Deliverables</a></li><li><a href="#roles--responsibilities">Roles &amp; Responsibilities</a></li></ol><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>This document outlines the software testing strategy for ensuring high-quality delivery of the application across mobile and web platforms. Both manual and automated testing will be applied to maximize coverage, efficiency, and defect detection.</p><h2 id="objectives" tabindex="-1">Objectives <a class="header-anchor" href="#objectives" aria-label="Permalink to &quot;Objectives&quot;">​</a></h2><ul><li><p>Ensure high-quality user experience across mobile, tv and web devices.</p></li><li><p>Achieve broad functional coverage through automation and deep exploratory coverage via manual testing.</p></li><li><p>Detect defects early through shift-left practices and continuous testing.</p></li><li><p>Support scalability by enabling data-driven, repeatable, and maintainable test suites.</p></li></ul><h2 id="scope" tabindex="-1">Scope <a class="header-anchor" href="#scope" aria-label="Permalink to &quot;Scope&quot;">​</a></h2><h4 id="in-scope" tabindex="-1">In-Scope <a class="header-anchor" href="#in-scope" aria-label="Permalink to &quot;In-Scope&quot;">​</a></h4><ul><li><p>Functional testing (unit, integration, end-to-end).</p></li><li><p>Regression and smoke testing.</p></li><li><p>Chrome browser &amp; cross-device (mobile, tv) testing.</p></li><li><p>Exploratory testing (usability, accessibility, error-handling).</p></li></ul><h4 id="out-of-scope" tabindex="-1">Out-of-Scope <a class="header-anchor" href="#out-of-scope" aria-label="Permalink to &quot;Out-of-Scope&quot;">​</a></h4><ul><li><p>Performance/stress testing (handled separately).</p></li><li><p>Security penetration testing (separate team).</p></li></ul><h2 id="test-approach" tabindex="-1">Test Approach <a class="header-anchor" href="#test-approach" aria-label="Permalink to &quot;Test Approach&quot;">​</a></h2><h4 id="risk-based-testing" tabindex="-1">Risk-Based Testing <a class="header-anchor" href="#risk-based-testing" aria-label="Permalink to &quot;Risk-Based Testing&quot;">​</a></h4><ul><li><p>Prioritize testing of high-risk features (authentication, payments, caregiver-patient interactions).</p></li><li><p>Automate high-value regression scenarios.</p></li><li><p>Apply exploratory testing for high-risk edge cases.</p></li></ul><h4 id="test-pyramid-strategy" tabindex="-1">Test Pyramid Strategy <a class="header-anchor" href="#test-pyramid-strategy" aria-label="Permalink to &quot;Test Pyramid Strategy&quot;">​</a></h4><ul><li><p>Unit Tests → Cover core logic, run on every commit.</p></li><li><p>API/Integration Tests → Validate service contracts and error handling.</p></li><li><p>UI Tests (Appium/Playwright) → Automate critical happy paths and smoke tests.</p></li><li><p>Manual Testing → Exploratory testing, usability, accessibility, rare edge cases.</p></li></ul><h4 id="scenario-based-testing" tabindex="-1">Scenario-Based Testing <a class="header-anchor" href="#scenario-based-testing" aria-label="Permalink to &quot;Scenario-Based Testing&quot;">​</a></h4><ul><li><p>Focus on end-to-end user workflows (e.g., login → complete action → validate result).</p></li><li><p>Use BDD-style scenarios that can be run manually or automated.</p></li></ul><h4 id="data-driven-testing" tabindex="-1">Data-Driven Testing <a class="header-anchor" href="#data-driven-testing" aria-label="Permalink to &quot;Data-Driven Testing&quot;">​</a></h4><ul><li><p>Automate tests using parameterized datasets (roles, input variations).</p></li><li><p>Reuse data pools for manual and automated test execution.</p></li></ul><h4 id="exploratory-testing" tabindex="-1">Exploratory Testing <a class="header-anchor" href="#exploratory-testing" aria-label="Permalink to &quot;Exploratory Testing&quot;">​</a></h4><ul><li><p>Use session-based charters (time-boxed sessions).</p></li><li><p>Target areas automation cannot cover (UI/UX, accessibility, unexpected flows).</p></li></ul><h2 id="test-coverage" tabindex="-1">Test Coverage <a class="header-anchor" href="#test-coverage" aria-label="Permalink to &quot;Test Coverage&quot;">​</a></h2><h4 id="coverage-measured-by" tabindex="-1">Coverage measured by: <a class="header-anchor" href="#coverage-measured-by" aria-label="Permalink to &quot;Coverage measured by:&quot;">​</a></h4><ul><li><p>Requirements Coverage (traceability matrix).</p></li><li><p>Code Coverage (unit + integration).</p></li><li><p>Risk Coverage (high, medium, low risk areas).</p></li><li><p>Device/Browser Coverage (matrix defined per release).</p></li></ul><h2 id="test-execution-strategy" tabindex="-1">Test Execution Strategy <a class="header-anchor" href="#test-execution-strategy" aria-label="Permalink to &quot;Test Execution Strategy&quot;">​</a></h2><h4 id="manual-testing" tabindex="-1">Manual Testing <a class="header-anchor" href="#manual-testing" aria-label="Permalink to &quot;Manual Testing&quot;">​</a></h4><ul><li><p>Exploratory testing of new features.</p></li><li><p>Usability and accessibility validation.</p></li><li><p>Rare or complex edge cases.</p></li></ul><h4 id="automated-testing" tabindex="-1">Automated Testing <a class="header-anchor" href="#automated-testing" aria-label="Permalink to &quot;Automated Testing&quot;">​</a></h4><ul><li><p>Appium: Mobile regression &amp; smoke tests across target devices.</p></li><li><p>Playwright: Web cross-browser regression, smoke tests, and workflow automation.</p></li><li><p>Data-driven suites for repeatable test coverage.</p></li><li><p>Nightly CI/CD regression runs + smoke tests on each pull request.</p></li></ul><h2 id="test-environments" tabindex="-1">Test Environments <a class="header-anchor" href="#test-environments" aria-label="Permalink to &quot;Test Environments&quot;">​</a></h2><ul><li><p>Staging environment mirrors production setup for final validation.</p></li><li><p>CI/CD pipeline triggers automated suites on dev/stage builds.</p></li><li><p>Device/browser coverage includes:</p><ul><li><p>Mobile: Latest Android/iOS, plus one legacy OS version.</p></li><li><p>Web: Chrome, Safari, Firefox, Edge (latest 2 versions).</p></li></ul></li></ul><h2 id="exit-criteria" tabindex="-1">Exit Criteria <a class="header-anchor" href="#exit-criteria" aria-label="Permalink to &quot;Exit Criteria&quot;">​</a></h2><ul><li><p>All critical &amp; high-severity defects resolved or mitigated.</p></li><li><p>≥ 90% test case execution across planned scope.</p></li><li><p>≥ 80% code coverage for unit tests.</p></li><li><p>Smoke suite passes consistently in CI/CD.</p></li><li><p>Stakeholder sign-off after exploratory sessions.</p></li></ul><h2 id="deliverables" tabindex="-1">Deliverables <a class="header-anchor" href="#deliverables" aria-label="Permalink to &quot;Deliverables&quot;">​</a></h2><ul><li><p>Test cases (manual + automated).</p></li><li><p>Test execution reports.</p></li><li><p>Defect reports &amp; root cause analysis.</p></li><li><p>Automation results integrated into CI/CD dashboard.</p></li></ul><h2 id="roles-responsibilities" tabindex="-1">Roles &amp; Responsibilities <a class="header-anchor" href="#roles-responsibilities" aria-label="Permalink to &quot;Roles &amp; Responsibilities&quot;">​</a></h2><ul><li><p>QA Engineers → Test design, automation, exploratory testing.</p></li><li><p>Developers → Unit tests, CI/CD integration.</p></li><li><p>Test Lead → Test planning, risk assessment, reporting.</p></li><li><p>Product Owners → Acceptance criteria validation, sign-off.</p></li></ul>',44)]))}const g=a(s,[["render",o]]);export{h as __pageData,g as default};
