import{_ as a,c as t,o as i,ae as r}from"./chunks/framework.Byi7L62k.js";const u=JSON.parse('{"title":"EverThrive","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/testing/everthrive.md","filePath":"docs/testing/everthrive.md"}'),s={name:"docs/testing/everthrive.md"};function o(l,e,n,c,h,p){return i(),t("div",null,e[0]||(e[0]=[r('<h1 id="everthrive" tabindex="-1">EverThrive <a class="header-anchor" href="#everthrive" aria-label="Permalink to &quot;EverThrive&quot;">​</a></h1><h3 id="project-name-everthrive" tabindex="-1">Project Name: EverThrive <a class="header-anchor" href="#project-name-everthrive" aria-label="Permalink to &quot;Project Name: EverThrive&quot;">​</a></h3><h3 id="version-1-0" tabindex="-1">Version: 1.0 <a class="header-anchor" href="#version-1-0" aria-label="Permalink to &quot;Version: 1.0&quot;">​</a></h3><h3 id="prepared-by-everthrive-team" tabindex="-1">Prepared By: EverThrive Team <a class="header-anchor" href="#prepared-by-everthrive-team" aria-label="Permalink to &quot;Prepared By: EverThrive Team&quot;">​</a></h3><h3 id="date-september-23-2025" tabindex="-1">Date: September 23, 2025 <a class="header-anchor" href="#date-september-23-2025" aria-label="Permalink to &quot;Date: September 23, 2025&quot;">​</a></h3><br><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ol><li><a href="#introduction">Introduction</a></li><li><a href="#objectives">Objectives</a></li><li><a href="#scope">Scope</a></li><li><a href="#test-approach">Test Approach</a></li><li><a href="#test-execution-strategy">Test Execution Strategy</a></li><li><a href="#test-environments">Test Environments</a></li><li><a href="#roles--responsibilities">Roles &amp; Responsibilities</a></li><li><a href="#time-scale">Time Scale</a></li></ol><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>The focus of this project:</p><ul><li>Simplicity of use in all areas</li><li>Realiable user log in, payments and other transactions</li><li>Secure using OTP</li><li>Check-Ins</li><li>Partners</li></ul><h2 id="objectives" tabindex="-1">Objectives <a class="header-anchor" href="#objectives" aria-label="Permalink to &quot;Objectives&quot;">​</a></h2><ul><li><p>Ensure high-quality user experience across the chrome browser and tv devices.</p></li><li><p>Catch regressions early by running Playwright tests after every commit.</p></li><li><p>Use data-testid attributes to make tests stable and independent of UI layout changes.</p></li><li><p>Creating Pull Requests (PRs) for code and test reviews before merging.</p></li><li><p>Automate testing where possible.</p></li></ul><h2 id="scope" tabindex="-1">Scope <a class="header-anchor" href="#scope" aria-label="Permalink to &quot;Scope&quot;">​</a></h2><h4 id="in-scope" tabindex="-1">In-Scope <a class="header-anchor" href="#in-scope" aria-label="Permalink to &quot;In-Scope&quot;">​</a></h4><ul><li><p>Browser Testing: Chrome (latest stable version) on desktop.</p></li><li><p>Mobile Devices: Verify calls and browser actions triggered from Android and iOS devices.</p></li><li><p>Happy Path: Key workflows automated end-to-end using Playwright.</p></li><li><p>Exploratory testing: (usability, accessibility, error-handling).</p></li><li><p>New Feature Testing: Verify the new feature in isolation and related existing features to prevent regressions.</p></li><li><p>Error cases: Show user specific erros for guidance</p></li></ul><h4 id="out-of-scope" tabindex="-1">Out-of-Scope <a class="header-anchor" href="#out-of-scope" aria-label="Permalink to &quot;Out-of-Scope&quot;">​</a></h4><ul><li><p>Non Chrome Browsers and legacy chrome browsers</p></li><li><p>Performance/stress testing (handled separately).</p></li><li><p>Security penetration testing (separate team).</p></li></ul><h2 id="test-approach" tabindex="-1">Test Approach <a class="header-anchor" href="#test-approach" aria-label="Permalink to &quot;Test Approach&quot;">​</a></h2><h4 id="risk-based-testing" tabindex="-1">Risk-Based Testing <a class="header-anchor" href="#risk-based-testing" aria-label="Permalink to &quot;Risk-Based Testing&quot;">​</a></h4><ul><li><p>Prioritize testing of high-risk features (authentication, payments, caregiver-patient interactions).</p></li><li><p>Automate high-value regression scenarios.</p></li><li><p>Apply exploratory testing for high-risk edge cases.</p></li></ul><h4 id="scenario-based-testing" tabindex="-1">Scenario-Based Testing <a class="header-anchor" href="#scenario-based-testing" aria-label="Permalink to &quot;Scenario-Based Testing&quot;">​</a></h4><ul><li><p>Focus on end-to-end user workflows (e.g., login → complete action → validate result).</p></li><li><p>Use BDD-style scenarios that can be run manually or automated.</p></li></ul><h4 id="data-driven-testing" tabindex="-1">Data-Driven Testing <a class="header-anchor" href="#data-driven-testing" aria-label="Permalink to &quot;Data-Driven Testing&quot;">​</a></h4><ul><li><p>Automate tests using parameterized datasets (roles, input variations).</p></li><li><p>Test using Multiple Accounts (Empty and Populated for Manager, CR and at least 1 Contact)</p></li><li><p>Reuse data pools for manual and automated test execution.</p></li></ul><h4 id="exploratory-testing" tabindex="-1">Exploratory Testing <a class="header-anchor" href="#exploratory-testing" aria-label="Permalink to &quot;Exploratory Testing&quot;">​</a></h4><ul><li><p>Use session-based charters (time-boxed sessions).</p></li><li><p>Target areas automation cannot cover (UI/UX, accessibility, unexpected flows).</p></li></ul><h2 id="test-execution-strategy" tabindex="-1">Test Execution Strategy <a class="header-anchor" href="#test-execution-strategy" aria-label="Permalink to &quot;Test Execution Strategy&quot;">​</a></h2><h4 id="manual-testing" tabindex="-1">Manual Testing <a class="header-anchor" href="#manual-testing" aria-label="Permalink to &quot;Manual Testing&quot;">​</a></h4><ul><li><p>Exploratory testing of new features and around it.</p></li><li><p>Usability and accessibility validation.</p></li><li><p>Rare or complex edge cases.</p></li></ul><h4 id="automated-testing" tabindex="-1">Automated Testing <a class="header-anchor" href="#automated-testing" aria-label="Permalink to &quot;Automated Testing&quot;">​</a></h4><ul><li><p>Playwright: Chrome browser regression, smoke tests, and workflow automation.</p></li><li><p>Nightly CI/CD regression runs + smoke tests on each pull request.</p></li></ul><h2 id="test-environments" tabindex="-1">Test Environments <a class="header-anchor" href="#test-environments" aria-label="Permalink to &quot;Test Environments&quot;">​</a></h2><ul><li><p>Staging environment mirrors production setup for final validation.</p></li><li><p>Device/browser coverage includes:</p><ul><li><p>Mobile: Latest Android/iOS, plus one legacy OS version.</p></li><li><p>Web: Chrome.</p></li></ul></li></ul><h2 id="roles-responsibilities" tabindex="-1">Roles &amp; Responsibilities <a class="header-anchor" href="#roles-responsibilities" aria-label="Permalink to &quot;Roles &amp; Responsibilities&quot;">​</a></h2><ul><li><p>QA Engineers → Test design, automation, exploratory testing.</p></li><li><p>Developers → Unit tests, CI/CD integration.</p></li><li><p>Test Lead → Test planning, risk assessment, reporting.</p></li><li><p>Product Owners → Acceptance criteria validation, sign-off.</p></li></ul><h2 id="time-scale" tabindex="-1">Time Scale <a class="header-anchor" href="#time-scale" aria-label="Permalink to &quot;Time Scale&quot;">​</a></h2><ul><li>1 hour of exploratory testing</li><li>1 hour of sanity testing</li><li>Specific related regression test on every commit</li></ul>',38)]))}const m=a(s,[["render",o]]);export{u as __pageData,m as default};
